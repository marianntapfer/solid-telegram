
//
// StyleDictionary.swift
//
// Do not edit directly
// Generated on Thu, 03 Jun 2021 13:34:59 GMT
//


import UIKit

public class StyleDictionary {
    public static let activeBackground = rgba(222, 234, 250, 1)
    public static let activeBackgroundLight = rgba(230, 239, 251, 1)
    public static let activeBackgroundStrong = rgba(206, 223, 248, 1)
    public static let activeDefault = rgba(49, 122, 226, 1)
    public static let activeMuted = rgba(189, 212, 245, 1)
    public static let blue100 = rgba(239, 245, 253, 1)
    public static let blue150 = rgba(230, 239, 251, 1)
    public static let blue200 = rgba(222, 234, 250, 1)
    public static let blue250 = rgba(206, 223, 248, 1)
    public static let blue300 = rgba(189, 212, 245, 1)
    public static let blue600 = rgba(123, 170, 237, 1)
    public static let blue750 = rgba(74, 138, 230, 1)
    public static let blue800 = rgba(49, 122, 226, 1)
    public static let blue850 = rgba(47, 110, 197, 1)
    public static let bodyExtraBoldCondensedItalicFontFamily = Akzidenz-Grotesk Pro
    public static let bodyExtraBoldCondensedItalicFontSize = 12
    public static let bodyExtraBoldCondensedItalicFontStretch = condensed
    public static let bodyExtraBoldCondensedItalicFontStyle = italic
    public static let bodyExtraBoldCondensedItalicFontStyleOld = Extra Bold Condensed Italic
    public static let bodyExtraBoldCondensedItalicFontWeight = 800
    public static let bodyExtraBoldCondensedItalicLetterSpacing = 0
    public static let bodyExtraBoldCondensedItalicLineHeight = normal
    public static let bodyExtraBoldCondensedItalicParagraphIndent = 0
    public static let bodyExtraBoldCondensedItalicParagraphSpacing = 0
    public static let bodyExtraBoldCondensedItalicTextCase = none
    public static let bodyExtraBoldCondensedItalicTextDecoration = none
    public static let bodyH3FontFamily = Akzidenz-Grotesk Pro
    public static let bodyH3FontSize = 20
    public static let bodyH3FontStretch = condensed
    public static let bodyH3FontStyle = normal
    public static let bodyH3FontStyleOld = Bold Condensed
    public static let bodyH3FontWeight = 700
    public static let bodyH3LetterSpacing = 2
    public static let bodyH3LineHeight = 160
    public static let bodyH3ParagraphIndent = 5
    public static let bodyH3ParagraphSpacing = 8
    public static let bodyH3TextCase = uppercase
    public static let bodyH3TextDecoration = none
    public static let bodyH4StrikeThroughFontFamily = Roboto
    public static let bodyH4StrikeThroughFontSize = 16
    public static let bodyH4StrikeThroughFontStretch = normal
    public static let bodyH4StrikeThroughFontStyle = italic
    public static let bodyH4StrikeThroughFontStyleOld = Medium Italic
    public static let bodyH4StrikeThroughFontWeight = 500
    public static let bodyH4StrikeThroughLetterSpacing = 0
    public static let bodyH4StrikeThroughLineHeight = normal
    public static let bodyH4StrikeThroughParagraphIndent = 0
    public static let bodyH4StrikeThroughParagraphSpacing = 0
    public static let bodyH4StrikeThroughTextCase = none
    public static let bodyH4StrikeThroughTextDecoration = line-through
    public static let bodyItalicFontFamily = Roboto
    public static let bodyItalicFontSize = 12
    public static let bodyItalicFontStretch = normal
    public static let bodyItalicFontStyle = italic
    public static let bodyItalicFontStyleOld = Italic
    public static let bodyItalicFontWeight = 400
    public static let bodyItalicLetterSpacing = 0
    public static let bodyItalicLineHeight = normal
    public static let bodyItalicParagraphIndent = 0
    public static let bodyItalicParagraphSpacing = 0
    public static let bodyItalicTextCase = none
    public static let bodyItalicTextDecoration = none
    public static let bodyMediumExtendedItalicFontFamily = Akzidenz-Grotesk Pro
    public static let bodyMediumExtendedItalicFontSize = 20
    public static let bodyMediumExtendedItalicFontStretch = expanded
    public static let bodyMediumExtendedItalicFontStyle = italic
    public static let bodyMediumExtendedItalicFontStyleOld = Medium Extended Italic
    public static let bodyMediumExtendedItalicFontWeight = 500
    public static let bodyMediumExtendedItalicLetterSpacing = 0
    public static let bodyMediumExtendedItalicLineHeight = normal
    public static let bodyMediumExtendedItalicParagraphIndent = 0
    public static let bodyMediumExtendedItalicParagraphSpacing = 0
    public static let bodyMediumExtendedItalicTextCase = none
    public static let bodyMediumExtendedItalicTextDecoration = none
    public static let bodySuperFontFamily = Akzidenz-Grotesk Pro
    public static let bodySuperFontSize = 22
    public static let bodySuperFontStretch = normal
    public static let bodySuperFontStyle = normal
    public static let bodySuperFontStyleOld = Super
    public static let bodySuperFontWeight = 900
    public static let bodySuperLetterSpacing = 0
    public static let bodySuperLineHeight = normal
    public static let bodySuperParagraphIndent = 0
    public static let bodySuperParagraphSpacing = 0
    public static let bodySuperTextCase = none
    public static let bodySuperTextDecoration = none
    public static let bordersDashedOutsideDashPattern = 5,5,3,3
    public static let bordersDashedOutsideStroke = rgba(64, 255, 186, 1)
    public static let bordersDashedOutsideStrokeAlign = outside
    public static let bordersDashedOutsideStrokeCap = none
    public static let bordersDashedOutsideStrokeJoin = miter
    public static let bordersDashedOutsideStrokeMiterLimit = 4
    public static let bordersDashedOutsideStrokeWeight = 1
    public static let bordersSingleDashPattern = 
    public static let bordersSingleStroke = rgba(112, 141, 242, 1)
    public static let bordersSingleStrokeAlign = inside
    public static let bordersSingleStrokeCap = none
    public static let bordersSingleStrokeJoin = miter
    public static let bordersSingleStrokeMiterLimit = 4
    public static let bordersSingleStrokeWeight = 1
    public static let bordersSingleStyleDashPattern = 
    public static let bordersSingleStyleStroke = rgba(4, 74, 255, 1)
    public static let bordersSingleStyleStrokeAlign = inside
    public static let bordersSingleStyleStrokeCap = none
    public static let bordersSingleStyleStrokeJoin = miter
    public static let bordersSingleStyleStrokeMiterLimit = 4
    public static let bordersSingleStyleStrokeWeight = 1
    public static let bordersUnsupportedGradientBordersDashPattern = 
    public static let bordersUnsupportedGradientBordersStrokeAlign = inside
    public static let bordersUnsupportedGradientBordersStrokeCap = none
    public static let bordersUnsupportedGradientBordersStrokeJoin = miter
    public static let bordersUnsupportedGradientBordersStrokeMiterLimit = 4
    public static let bordersUnsupportedGradientBordersStrokeWeight = 1
    public static let bordersUnsupportedImageBordersDashPattern = 
    public static let bordersUnsupportedImageBordersStrokeAlign = inside
    public static let bordersUnsupportedImageBordersStrokeCap = none
    public static let bordersUnsupportedImageBordersStrokeJoin = miter
    public static let bordersUnsupportedImageBordersStrokeMiterLimit = 4
    public static let bordersUnsupportedImageBordersStrokeWeight = 1
    public static let bordersUnsupportedMultipleBordersDashPattern = 5,10
    public static let bordersUnsupportedMultipleBordersStroke = rgba(255, 230, 0, 1)
    public static let bordersUnsupportedMultipleBordersStrokeAlign = inside
    public static let bordersUnsupportedMultipleBordersStrokeCap = none
    public static let bordersUnsupportedMultipleBordersStrokeJoin = miter
    public static let bordersUnsupportedMultipleBordersStrokeMiterLimit = 4
    public static let bordersUnsupportedMultipleBordersStrokeWeight = 1
    public static let colorComponentButtonColorAlias = UIColor(red: 0.839, green: 0.259, blue: 0.212, alpha:1)
    public static let colorGlobalInfo = UIColor(red: 0.184, green: 0.431, blue: 0.773, alpha:1)
    public static let colorGlobalNegative = UIColor(red: 0.839, green: 0.259, blue: 0.212, alpha:1)
    public static let colorGlobalPrimary = UIColor(red: 0.047, green: 0.573, blue: 0.243, alpha:1)
    public static let colorsMultipleFills0 = rgba(64, 255, 186, 1)
    public static let colorsMultipleFills1 = rgba(0, 0, 0, 0.1)
    public static let colorsSingleBlue = rgba(4, 74, 255, 1)
    public static let colorsSpecialCharactersAnderung = rgba(52, 86, 175, 1)
    public static let colorsSpecialCharactersðŸ˜… = rgba(64, 223, 80, 1)
    public static let effectBackgroundBlurRadius = 4
    public static let effectBackgroundBlurType = backgroundBlur
    public static let effectDropShadowSingleColor = rgba(0, 0, 0, 0.25)
    public static let effectDropShadowSingleOffsetX = 0
    public static let effectDropShadowSingleOffsetY = 4
    public static let effectDropShadowSingleRadius = 4
    public static let effectDropShadowSingleSpread = 0
    public static let effectDropShadowSingleType = dropShadow
    public static let effectInnerShadowMultiple0Color = rgba(0, 0, 0, 0.25)
    public static let effectInnerShadowMultiple0OffsetX = 0
    public static let effectInnerShadowMultiple0OffsetY = 4
    public static let effectInnerShadowMultiple0Radius = 4
    public static let effectInnerShadowMultiple0Spread = 0
    public static let effectInnerShadowMultiple0Type = innerShadow
    public static let effectInnerShadowMultiple1Color = rgba(0, 0, 0, 1)
    public static let effectInnerShadowMultiple1OffsetX = 10
    public static let effectInnerShadowMultiple1OffsetY = 100
    public static let effectInnerShadowMultiple1Radius = 1
    public static let effectInnerShadowMultiple1Spread = 0.5
    public static let effectInnerShadowMultiple1Type = innerShadow
    public static let effectInnerShadowMultiple2Color = rgba(0, 0, 0, 0.25)
    public static let effectInnerShadowMultiple2OffsetX = -4
    public static let effectInnerShadowMultiple2OffsetY = 2
    public static let effectInnerShadowMultiple2Radius = 3
    public static let effectInnerShadowMultiple2Spread = 11
    public static let effectInnerShadowMultiple2Type = innerShadow
    public static let effectLayerBlurRadius = 4
    public static let effectLayerBlurType = layerBlur
    public static let elevation1000Color = rgba(0, 0, 0, 0.07)
    public static let elevation1000OffsetX = 0
    public static let elevation1000OffsetY = 1
    public static let elevation1000Radius = 3
    public static let elevation1000Spread = 0
    public static let elevation1000Type = dropShadow
    public static let elevation1001Color = rgba(0, 0, 0, 0.06)
    public static let elevation1001OffsetX = 0
    public static let elevation1001OffsetY = 1
    public static let elevation1001Radius = 2
    public static let elevation1001Spread = -2
    public static let elevation1001Type = dropShadow
    public static let elevation1002Color = rgba(0, 0, 0, 0.05)
    public static let elevation1002OffsetX = 0
    public static let elevation1002OffsetY = 0
    public static let elevation1002Radius = 1
    public static let elevation1002Spread = 1
    public static let elevation1002Type = dropShadow
    public static let elevation16000Color = rgba(0, 0, 0, 0.1)
    public static let elevation16000OffsetX = 0
    public static let elevation16000OffsetY = 8
    public static let elevation16000Radius = 10
    public static let elevation16000Spread = -5
    public static let elevation16000Type = dropShadow
    public static let elevation16001Color = rgba(0, 0, 0, 0.06)
    public static let elevation16001OffsetX = 0
    public static let elevation16001OffsetY = 6
    public static let elevation16001Radius = 30
    public static let elevation16001Spread = 5
    public static let elevation16001Type = dropShadow
    public static let elevation16002Color = rgba(0, 0, 0, 0.05)
    public static let elevation16002OffsetX = 0
    public static let elevation16002OffsetY = 16
    public static let elevation16002Radius = 24
    public static let elevation16002Spread = 2
    public static let elevation16002Type = dropShadow
    public static let elevation16003Color = rgba(0, 0, 0, 0.24)
    public static let elevation16003OffsetX = 0
    public static let elevation16003OffsetY = 0
    public static let elevation16003Radius = 2
    public static let elevation16003Spread = 0
    public static let elevation16003Type = dropShadow
    public static let elevation2000Color = rgba(42, 54, 71, 0.12)
    public static let elevation2000OffsetX = 0
    public static let elevation2000OffsetY = 0
    public static let elevation2000Radius = 4
    public static let elevation2000Spread = 0
    public static let elevation2000Type = dropShadow
    public static let elevation2001Color = rgba(42, 54, 71, 0.08)
    public static let elevation2001OffsetX = 0
    public static let elevation2001OffsetY = 3
    public static let elevation2001Radius = 5
    public static let elevation2001Spread = 0
    public static let elevation2001Type = dropShadow
    public static let elevation24000Color = rgba(25, 36, 53, 0.16)
    public static let elevation24000OffsetX = 0
    public static let elevation24000OffsetY = 18
    public static let elevation24000Radius = 28
    public static let elevation24000Spread = 0
    public static let elevation24000Type = dropShadow
    public static let elevation24001Color = rgba(25, 36, 53, 0.32)
    public static let elevation24001OffsetX = 0
    public static let elevation24001OffsetY = 0
    public static let elevation24001Radius = 1
    public static let elevation24001Spread = 0
    public static let elevation24001Type = dropShadow
    public static let elevation3000Color = rgba(0, 0, 0, 0.1)
    public static let elevation3000OffsetX = 0
    public static let elevation3000OffsetY = 1
    public static let elevation3000Radius = 8
    public static let elevation3000Spread = 0
    public static let elevation3000Type = dropShadow
    public static let elevation3001Color = rgba(0, 0, 0, 0.06)
    public static let elevation3001OffsetX = 0
    public static let elevation3001OffsetY = 3
    public static let elevation3001Radius = 3
    public static let elevation3001Spread = -2
    public static let elevation3001Type = dropShadow
    public static let elevation3002Color = rgba(0, 0, 0, 0.05)
    public static let elevation3002OffsetX = 0
    public static let elevation3002OffsetY = 3
    public static let elevation3002Radius = 4
    public static let elevation3002Spread = 0
    public static let elevation3002Type = dropShadow
    public static let elevation3003Color = rgba(0, 0, 0, 0.16)
    public static let elevation3003OffsetX = 0
    public static let elevation3003OffsetY = 0
    public static let elevation3003Radius = 2
    public static let elevation3003Spread = 0
    public static let elevation3003Type = dropShadow
    public static let elevation50Color = rgba(42, 54, 71, 0.05)
    public static let elevation50OffsetX = 0
    public static let elevation50OffsetY = 1
    public static let elevation50Radius = 2
    public static let elevation50Spread = 0
    public static let elevation50Type = dropShadow
    public static let elevation8000Color = rgba(0, 0, 0, 0.1)
    public static let elevation8000OffsetX = 0
    public static let elevation8000OffsetY = 5
    public static let elevation8000Radius = 5
    public static let elevation8000Spread = -3
    public static let elevation8000Type = dropShadow
    public static let elevation8001Color = rgba(0, 0, 0, 0.06)
    public static let elevation8001OffsetX = 0
    public static let elevation8001OffsetY = 3
    public static let elevation8001Radius = 14
    public static let elevation8001Spread = 2
    public static let elevation8001Type = dropShadow
    public static let elevation8002Color = rgba(0, 0, 0, 0.05)
    public static let elevation8002OffsetX = 0
    public static let elevation8002OffsetY = 8
    public static let elevation8002Radius = 10
    public static let elevation8002Spread = 1
    public static let elevation8002Type = dropShadow
    public static let elevation8003Color = rgba(0, 0, 0, 0.24)
    public static let elevation8003OffsetX = 0
    public static let elevation8003OffsetY = 0
    public static let elevation8003Radius = 2
    public static let elevation8003Spread = 0
    public static let elevation8003Type = dropShadow
    public static let elevationsElevation010Color = rgba(0, 0, 0, 0.07)
    public static let elevationsElevation010OffsetX = 0
    public static let elevationsElevation010OffsetY = 1
    public static let elevationsElevation010Radius = 3
    public static let elevationsElevation010Spread = 0
    public static let elevationsElevation010Type = dropShadow
    public static let elevationsElevation011Color = rgba(0, 0, 0, 0.06)
    public static let elevationsElevation011OffsetX = 0
    public static let elevationsElevation011OffsetY = 1
    public static let elevationsElevation011Radius = 2
    public static let elevationsElevation011Spread = -2
    public static let elevationsElevation011Type = dropShadow
    public static let elevationsElevation012Color = rgba(0, 0, 0, 0.05)
    public static let elevationsElevation012OffsetX = 0
    public static let elevationsElevation012OffsetY = 0
    public static let elevationsElevation012Radius = 1
    public static let elevationsElevation012Spread = 1
    public static let elevationsElevation012Type = dropShadow
    public static let elevationsElevation020Color = rgba(0, 0, 0, 0.1)
    public static let elevationsElevation020OffsetX = 0
    public static let elevationsElevation020OffsetY = 1
    public static let elevationsElevation020Radius = 8
    public static let elevationsElevation020Spread = 0
    public static let elevationsElevation020Type = dropShadow
    public static let elevationsElevation021Color = rgba(0, 0, 0, 0.06)
    public static let elevationsElevation021OffsetX = 0
    public static let elevationsElevation021OffsetY = 3
    public static let elevationsElevation021Radius = 3
    public static let elevationsElevation021Spread = -2
    public static let elevationsElevation021Type = dropShadow
    public static let elevationsElevation022Color = rgba(0, 0, 0, 0.05)
    public static let elevationsElevation022OffsetX = 0
    public static let elevationsElevation022OffsetY = 3
    public static let elevationsElevation022Radius = 4
    public static let elevationsElevation022Spread = 0
    public static let elevationsElevation022Type = dropShadow
    public static let elevationsElevation023Color = rgba(0, 0, 0, 0.16)
    public static let elevationsElevation023OffsetX = 0
    public static let elevationsElevation023OffsetY = 0
    public static let elevationsElevation023Radius = 2
    public static let elevationsElevation023Spread = 0
    public static let elevationsElevation023Type = dropShadow
    public static let gradientMultiple0GradientType = linear
    public static let gradientMultiple0Opacity = 1
    public static let gradientMultiple0Stops0Color = rgba(255, 184, 0, 1)
    public static let gradientMultiple0Stops0Position = 0
    public static let gradientMultiple0Stops1Color = rgba(255, 184, 0, 1)
    public static let gradientMultiple0Stops1Position = 1
    public static let gradientMultiple1GradientType = radial
    public static let gradientMultiple1Opacity = 1
    public static let gradientMultiple1Stops0Color = rgba(255, 255, 255, 1)
    public static let gradientMultiple1Stops0Position = 0
    public static let gradientMultiple1Stops1Color = rgba(255, 255, 255, 1)
    public static let gradientMultiple1Stops1Position = 1
    public static let gradientMultiple2GradientType = angular
    public static let gradientMultiple2Opacity = 1
    public static let gradientMultiple2Stops0Color = rgba(207, 48, 48, 1)
    public static let gradientMultiple2Stops0Position = 0
    public static let gradientMultiple2Stops1Color = rgba(255, 255, 255, 1)
    public static let gradientMultiple2Stops1Position = 1
    public static let gradientMultiple3GradientType = diamond
    public static let gradientMultiple3Opacity = 1
    public static let gradientMultiple3Stops0Color = rgba(74, 79, 204, 1)
    public static let gradientMultiple3Stops0Position = 0
    public static let gradientMultiple3Stops1Color = rgba(255, 255, 255, 1)
    public static let gradientMultiple3Stops1Position = 1
    public static let gradientSingleWithMultipleColorStopsGradientType = radial
    public static let gradientSingleWithMultipleColorStopsOpacity = 1
    public static let gradientSingleWithMultipleColorStopsStops0Color = rgba(255, 184, 0, 1)
    public static let gradientSingleWithMultipleColorStopsStops0Position = 0
    public static let gradientSingleWithMultipleColorStopsStops1Color = rgba(255, 138, 0, 1)
    public static let gradientSingleWithMultipleColorStopsStops1Position = 0.34
    public static let gradientSingleWithMultipleColorStopsStops2Color = rgba(255, 46, 0, 1)
    public static let gradientSingleWithMultipleColorStopsStops2Position = 0.65
    public static let gradientSingleWithMultipleColorStopsStops3Color = rgba(255, 0, 0, 1)
    public static let gradientSingleWithMultipleColorStopsStops3Position = 1
    public static let green100 = rgba(236, 248, 240, 1)
    public static let green150 = rgba(225, 244, 232, 1)
    public static let green200 = rgba(215, 241, 225, 1)
    public static let green250 = rgba(196, 234, 210, 1)
    public static let green300 = rgba(176, 226, 194, 1)
    public static let green600 = rgba(97, 199, 134, 1)
    public static let green750 = rgba(38, 178, 89, 1)
    public static let green800 = rgba(8, 167, 66, 1)
    public static let green850 = rgba(12, 146, 62, 1)
    public static let gridMultiple0Alignment = max
    public static let gridMultiple0Count = 7
    public static let gridMultiple0GutterSize = 20
    public static let gridMultiple0Offset = 3
    public static let gridMultiple0Pattern = columns
    public static let gridMultiple0SectionSize = 1
    public static let gridMultiple1Alignment = center
    public static let gridMultiple1Count = 6
    public static let gridMultiple1GutterSize = 20
    public static let gridMultiple1Pattern = columns
    public static let gridMultiple1SectionSize = 12
    public static let gridMultiple2Alignment = stretch
    public static let gridMultiple2Count = 5
    public static let gridMultiple2GutterSize = 20
    public static let gridMultiple2Offset = 10
    public static let gridMultiple2Pattern = columns
    public static let gridMultiple3Alignment = min
    public static let gridMultiple3Count = 4
    public static let gridMultiple3GutterSize = 20
    public static let gridMultiple3Offset = 13
    public static let gridMultiple3Pattern = columns
    public static let gridMultiple3SectionSize = 34
    public static let gridMultiple4Alignment = max
    public static let gridMultiple4Count = 5
    public static let gridMultiple4GutterSize = 20
    public static let gridMultiple4Offset = 10
    public static let gridMultiple4Pattern = rows
    public static let gridMultiple4SectionSize = 8
    public static let gridMultiple5Alignment = center
    public static let gridMultiple5Count = 4
    public static let gridMultiple5GutterSize = 10
    public static let gridMultiple5Pattern = rows
    public static let gridMultiple5SectionSize = 8
    public static let gridMultiple6Alignment = min
    public static let gridMultiple6Count = 3
    public static let gridMultiple6GutterSize = 20
    public static let gridMultiple6Offset = 10
    public static let gridMultiple6Pattern = rows
    public static let gridMultiple6SectionSize = 8
    public static let gridMultiple7Pattern = grid
    public static let gridMultiple7SectionSize = 8
    public static let gridSingleAlignment = center
    public static let gridSingleCount = 5
    public static let gridSingleGutterSize = 20
    public static let gridSinglePattern = columns
    public static let gridSingleSectionSize = 11
    public static let iconActive = rgba(49, 122, 226, 1)
    public static let iconInfo = rgba(49, 122, 226, 1)
    public static let iconLearn = rgba(114, 30, 169, 1)
    public static let iconLink = rgba(49, 122, 226, 1)
    public static let iconMuted = rgba(185, 186, 187, 1)
    public static let iconMutedInverted = rgba(255, 255, 255, 0.48)
    public static let iconNegative = rgba(249, 72, 57, 1)
    public static let iconPositive = rgba(8, 167, 66, 1)
    public static let iconPrimary = rgba(38, 41, 44, 1)
    public static let iconPrimaryInverted = rgba(255, 255, 255, 1)
    public static let iconSecondary = rgba(116, 118, 120, 1)
    public static let iconSecondaryInverted = rgba(255, 255, 255, 0.72)
    public static let iconWarning = rgba(255, 204, 0, 1)
    public static let infoBackground = rgba(222, 234, 250, 1)
    public static let infoBackgroundLight = rgba(239, 245, 253, 1)
    public static let infoDefault = rgba(49, 122, 226, 1)
    public static let infoMuted = rgba(189, 212, 245, 1)
    public static let infoStrong = rgba(47, 110, 197, 1)
    public static let learnBackground = rgba(232, 219, 241, 1)
    public static let learnBackgroundLight = rgba(232, 219, 241, 1)
    public static let learnDefault = rgba(114, 30, 169, 1)
    public static let learnMuted = rgba(232, 219, 241, 1)
    public static let learnSecondary = rgba(165, 111, 200, 1)
    public static let learnStrong = rgba(102, 31, 149, 1)
    public static let motionDissolveDuration = 0.45
    public static let motionDissolveEasing = cubic-bezier
    public static let motionDissolveEasingFunctionX1 = 0.6968395709991455
    public static let motionDissolveEasingFunctionX2 = 0.06683959811925888
    public static let motionDissolveEasingFunctionY1 = 0.052326660603284836
    public static let motionDissolveEasingFunctionY2 = 0.9323266744613647
    public static let motionDissolveType = dissolve
    public static let motionMoveInDirection = left
    public static let motionMoveInDuration = 0.5
    public static let motionMoveInEasing = ease-in
    public static let motionMoveInEasingFunctionX1 = 0.41999998688697815
    public static let motionMoveInEasingFunctionX2 = 1
    public static let motionMoveInEasingFunctionY1 = 0
    public static let motionMoveInEasingFunctionY2 = 1
    public static let motionMoveInType = move_in
    public static let motionPushDirection = left
    public static let motionPushDuration = 0.5
    public static let motionPushEasing = ease-in-back
    public static let motionPushEasingFunctionX1 = 0.30000001192092896
    public static let motionPushEasingFunctionX2 = 0.699999988079071
    public static let motionPushEasingFunctionY1 = -0.05000000074505806
    public static let motionPushEasingFunctionY2 = -0.5
    public static let motionPushType = push
    public static let motionSmartDuration = 0.5
    public static let motionSmartEasing = linear
    public static let motionSmartEasingFunctionX1 = 0
    public static let motionSmartEasingFunctionX2 = 1
    public static let motionSmartEasingFunctionY1 = 0
    public static let motionSmartEasingFunctionY2 = 1
    public static let motionSmartType = smart_animate
    public static let negativeBackground = rgba(254, 226, 223, 1)
    public static let negativeDefault = rgba(249, 72, 57, 1)
    public static let negativeHover = rgba(250, 94, 81, 1)
    public static let negativeMuted = rgba(253, 196, 191, 1)
    public static let negativeSecondary = rgba(251, 138, 128, 1)
    public static let negativeStrong = rgba(214, 66, 54, 1)
    public static let neutralInverted200 = rgba(255, 255, 255, 0.16)
    public static let neutralInverted250 = rgba(255, 255, 255, 0.24)
    public static let neutralInverted300 = rgba(255, 255, 255, 0.48)
    public static let neutralInverted600 = rgba(255, 255, 255, 0.72)
    public static let neutralRgba100 = rgba(38, 41, 44, 0.08)
    public static let neutralRgba150 = rgba(38, 41, 44, 0.12)
    public static let neutralRgba200 = rgba(38, 41, 44, 0.16)
    public static let neutralRgba250 = rgba(38, 41, 44, 0.24)
    public static let neutralRgba300 = rgba(38, 41, 44, 0.32)
    public static let neutralRgba40 = rgba(38, 41, 44, 0.04)
    public static let neutralRgba50 = rgba(38, 41, 44, 0.05)
    public static let neutralRgba600 = rgba(38, 41, 44, 0.64)
    public static let neutralRgba750 = rgba(38, 41, 44, 0.88)
    public static let neutral00 = rgba(255, 255, 255, 1)
    public static let neutral100 = rgba(238, 238, 238, 1)
    public static let neutral150 = rgba(229, 229, 229, 1)
    public static let neutral200 = rgba(220, 221, 221, 1)
    public static let neutral250 = rgba(203, 204, 205, 1)
    public static let neutral300 = rgba(185, 186, 187, 1)
    public static let neutral40 = rgba(247, 247, 247, 1)
    public static let neutral50 = rgba(244, 245, 246, 1)
    public static let neutral600 = rgba(116, 118, 120, 1)
    public static let neutral750 = rgba(64, 67, 70, 1)
    public static let neutral800 = rgba(38, 41, 44, 1)
    public static let neutral850 = rgba(32, 34, 37, 1)
    public static let otherHighlightYellow = rgba(255, 245, 112, 1)
    public static let otherNoteYellow = rgba(255, 252, 220, 1)
    public static let positiveBackground = rgba(215, 241, 225, 1)
    public static let positiveBackgroundLight = rgba(225, 244, 232, 1)
    public static let positiveDefault = rgba(8, 167, 66, 1)
    public static let positiveMuted = rgba(176, 226, 194, 1)
    public static let positiveSecondary = rgba(97, 199, 134, 1)
    public static let positiveStrong = rgba(12, 146, 62, 1)
    public static let primaryDefault = rgba(8, 167, 66, 1)
    public static let primaryHover = rgba(38, 178, 89, 1)
    public static let primaryMuted = rgba(176, 226, 194, 1)
    public static let primaryStrong = rgba(12, 146, 62, 1)
    public static let purple200 = rgba(232, 219, 241, 1)
    public static let purple600 = rgba(165, 111, 200, 1)
    public static let purple800 = rgba(114, 30, 169, 1)
    public static let purple850 = rgba(102, 31, 149, 1)
    public static let radii5RadiiBottomLeft = 5
    public static let radii5RadiiBottomRight = 5
    public static let radii5RadiiTopLeft = 5
    public static let radii5RadiiTopRight = 5
    public static let radii5Radius = 5
    public static let radii5RadiusType = single
    public static let radii5Smoothing = 0
    public static let radiiMixedRadiiBottomLeft = 0
    public static let radiiMixedRadiiBottomRight = 3.5
    public static let radiiMixedRadiiTopLeft = 1
    public static let radiiMixedRadiiTopRight = 2
    public static let radiiMixedRadiusType = mixed
    public static let radiiMixedSmoothing = 0
    public static let radiiSameWithSmoothingRadiiBottomLeft = 5
    public static let radiiSameWithSmoothingRadiiBottomRight = 5
    public static let radiiSameWithSmoothingRadiiTopLeft = 5
    public static let radiiSameWithSmoothingRadiiTopRight = 5
    public static let radiiSameWithSmoothingRadius = 5
    public static let radiiSameWithSmoothingRadiusType = single
    public static let radiiSameWithSmoothingSmoothing = 0.65
    public static let radiiSmoothingRadiiBottomLeft = 10
    public static let radiiSmoothingRadiiBottomRight = 10
    public static let radiiSmoothingRadiiTopLeft = 10
    public static let radiiSmoothingRadiiTopRight = 10
    public static let radiiSmoothingRadius = 10
    public static let radiiSmoothingRadiusType = single
    public static let radiiSmoothingSmoothing = 0.75
    public static let red100 = rgba(255, 241, 240, 1)
    public static let red150 = rgba(254, 233, 231, 1)
    public static let red200 = rgba(254, 226, 223, 1)
    public static let red250 = rgba(254, 211, 208, 1)
    public static let red300 = rgba(253, 196, 191, 1)
    public static let red600 = rgba(251, 138, 128, 1)
    public static let red750 = rgba(250, 94, 81, 1)
    public static let red800 = rgba(249, 72, 57, 1)
    public static let red850 = rgba(214, 66, 54, 1)
    public static let separatorBorder = rgba(203, 204, 205, 1)
    public static let separatorSeparator = rgba(229, 229, 229, 1)
    public static let sizes32 = 32.72
    public static let sizes40 = 40
    public static let sizes60 = 60
    public static let sizes80 = 80
    public static let sizesFrame = 32
    public static let sizesNewValue = 2
    public static let sizesRect = 32
    public static let sizesShapeInComponent = 32
    public static let sizesSize100 = 8
    public static let sizesSize150 = 12
    public static let sizesSize200 = 16
    public static let sizesSize300 = 24
    public static let sizesSize400 = 32
    public static let sizesSize500 = 40
    public static let sizesSize600 = 48
    public static let sizesSize700 = 56
    public static let sizesSize800 = 64
    public static let sizesSomething = 2
    public static let spacing10Bottom = 10
    public static let spacing10Left = 10
    public static let spacing10Right = 10
    public static let spacing10Top = 10
    public static let spacingMixedBottom = 30
    public static let spacingMixedLeft = 20
    public static let spacingMixedRight = 20
    public static let spacingMixedTop = 10
    public static let spacingTopBottom = 0
    public static let spacingTopLeft = 0
    public static let spacingTopRight = 0
    public static let spacingTopTop = 10
    public static let surfaceAppBackground = rgba(247, 247, 247, 1)
    public static let surfaceForeground = rgba(255, 255, 255, 1)
    public static let surfaceForegroundInverted = rgba(38, 41, 44, 1)
    public static let surfaceForegroundInvertedLight = rgba(64, 67, 70, 1)
    public static let surfaceOnForegroundLight = rgba(238, 238, 238, 1)
    public static let surfaceOnForegroundMedium = rgba(220, 221, 221, 1)
    public static let surfaceOnForegroundStrong = rgba(185, 186, 187, 1)
    public static let surfaceOnInvertedLight = rgba(255, 255, 255, 0.16)
    public static let surfaceOnInvertedMedium = rgba(255, 255, 255, 0.24)
    public static let surfaceOnInvertedStrong = rgba(255, 255, 255, 0.48)
    public static let textActive = rgba(49, 122, 226, 1)
    public static let textInfo = rgba(47, 110, 197, 1)
    public static let textLearn = rgba(102, 31, 149, 1)
    public static let textLink = rgba(49, 122, 226, 1)
    public static let textMuted = rgba(185, 186, 187, 1)
    public static let textMutedInverted = rgba(255, 255, 255, 0.48)
    public static let textNegative = rgba(249, 72, 57, 1)
    public static let textPositive = rgba(8, 167, 66, 1)
    public static let textPrimary = rgba(38, 41, 44, 1)
    public static let textPrimaryInverted = rgba(255, 255, 255, 1)
    public static let textSecondary = rgba(116, 118, 120, 1)
    public static let textSecondaryInverted = rgba(255, 255, 255, 0.72)
    public static let textTitleLFontFamily = Source Sans Pro
    public static let textTitleLFontSize = 18
    public static let textTitleLFontStretch = normal
    public static let textTitleLFontStyle = normal
    public static let textTitleLFontStyleOld = Semibold
    public static let textTitleLFontWeight = 600
    public static let textTitleLLetterSpacing = 0
    public static let textTitleLLineHeight = 24
    public static let textTitleLParagraphIndent = 0
    public static let textTitleLParagraphSpacing = 12
    public static let textTitleLTextCase = none
    public static let textTitleLTextDecoration = none
    public static let textTitleMFontFamily = Source Sans Pro
    public static let textTitleMFontSize = 15
    public static let textTitleMFontStretch = normal
    public static let textTitleMFontStyle = normal
    public static let textTitleMFontStyleOld = Semibold
    public static let textTitleMFontWeight = 600
    public static let textTitleMLetterSpacing = 0
    public static let textTitleMLineHeight = 20
    public static let textTitleMParagraphIndent = 0
    public static let textTitleMParagraphSpacing = 12
    public static let textTitleMTextCase = none
    public static let textTitleMTextDecoration = none
    public static let textTitleXlFontFamily = Source Sans Pro
    public static let textTitleXlFontSize = 23
    public static let textTitleXlFontStretch = normal
    public static let textTitleXlFontStyle = normal
    public static let textTitleXlFontStyleOld = Regular
    public static let textTitleXlFontWeight = 400
    public static let textTitleXlLetterSpacing = 0
    public static let textTitleXlLineHeight = 28
    public static let textTitleXlParagraphIndent = 0
    public static let textTitleXlParagraphSpacing = 12
    public static let textTitleXlTextCase = none
    public static let textTitleXlTextDecoration = none
    public static let textTitleXxlFontFamily = Source Sans Pro
    public static let textTitleXxlFontSize = 27
    public static let textTitleXxlFontStretch = normal
    public static let textTitleXxlFontStyle = normal
    public static let textTitleXxlFontStyleOld = Regular
    public static let textTitleXxlFontWeight = 400
    public static let textTitleXxlLetterSpacing = 0
    public static let textTitleXxlLineHeight = 32
    public static let textTitleXxlParagraphIndent = 0
    public static let textTitleXxlParagraphSpacing = 12
    public static let textTitleXxlTextCase = none
    public static let textTitleXxlTextDecoration = none
    public static let textWarning = rgba(255, 204, 0, 1)
    public static let warningBackground = rgba(255, 247, 214, 1)
    public static let warningDefault = rgba(255, 204, 0, 1)
    public static let warningMuted = rgba(255, 247, 214, 1)
    public static let warningSecondary = rgba(255, 223, 92, 1)
    public static let warningStrong = rgba(221, 178, 7, 1)
    public static let webappBodyFontFamily = Inter
    public static let webappBodyFontSize = 14
    public static let webappBodyFontStretch = normal
    public static let webappBodyFontStyle = normal
    public static let webappBodyFontStyleOld = Regular
    public static let webappBodyFontWeight = 400
    public static let webappBodyLFontFamily = Inter
    public static let webappBodyLFontSize = 16
    public static let webappBodyLFontStretch = normal
    public static let webappBodyLFontStyle = normal
    public static let webappBodyLFontStyleOld = Regular
    public static let webappBodyLFontWeight = 400
    public static let webappBodyLLetterSpacing = 0
    public static let webappBodyLLineHeight = 20
    public static let webappBodyLParagraphIndent = 0
    public static let webappBodyLParagraphSpacing = 12
    public static let webappBodyLTextCase = none
    public static let webappBodyLTextDecoration = none
    public static let webappBodyLetterSpacing = 0
    public static let webappBodyLineHeight = 20
    public static let webappBodyParagraphIndent = 0
    public static let webappBodyParagraphSpacing = 12
    public static let webappBodySFontFamily = Inter
    public static let webappBodySFontSize = 12
    public static let webappBodySFontStretch = normal
    public static let webappBodySFontStyle = normal
    public static let webappBodySFontStyleOld = Regular
    public static let webappBodySFontWeight = 400
    public static let webappBodySLetterSpacing = 0
    public static let webappBodySLineHeight = 16
    public static let webappBodySParagraphIndent = 0
    public static let webappBodySParagraphSpacing = 12
    public static let webappBodySTextCase = none
    public static let webappBodySTextDecoration = none
    public static let webappBodyTextCase = none
    public static let webappBodyTextDecoration = none
    public static let webappLinkAltFontFamily = Inter
    public static let webappLinkAltFontSize = 14
    public static let webappLinkAltFontStretch = normal
    public static let webappLinkAltFontStyle = normal
    public static let webappLinkAltFontStyleOld = Regular
    public static let webappLinkAltFontWeight = 400
    public static let webappLinkAltLetterSpacing = 0
    public static let webappLinkAltLineHeight = 20
    public static let webappLinkAltParagraphIndent = 0
    public static let webappLinkAltParagraphSpacing = 12
    public static let webappLinkAltTextCase = none
    public static let webappLinkAltTextDecoration = none
    public static let webappLinkFontFamily = Inter
    public static let webappLinkFontSize = 14
    public static let webappLinkFontStretch = normal
    public static let webappLinkFontStyle = normal
    public static let webappLinkFontStyleOld = Semi Bold
    public static let webappLinkFontWeight = 600
    public static let webappLinkLetterSpacing = 0
    public static let webappLinkLineHeight = 20
    public static let webappLinkParagraphIndent = 0
    public static let webappLinkParagraphSpacing = 12
    public static let webappLinkTextCase = none
    public static let webappLinkTextDecoration = none
    public static let webappTitleLFontFamily = Inter
    public static let webappTitleLFontSize = 16
    public static let webappTitleLFontStretch = normal
    public static let webappTitleLFontStyle = normal
    public static let webappTitleLFontStyleOld = Semi Bold
    public static let webappTitleLFontWeight = 600
    public static let webappTitleLLetterSpacing = 0
    public static let webappTitleLLineHeight = 24
    public static let webappTitleLParagraphIndent = 0
    public static let webappTitleLParagraphSpacing = 12
    public static let webappTitleLTextCase = none
    public static let webappTitleLTextDecoration = none
    public static let webappTitleMFontFamily = Inter
    public static let webappTitleMFontSize = 14
    public static let webappTitleMFontStretch = normal
    public static let webappTitleMFontStyle = normal
    public static let webappTitleMFontStyleOld = Semi Bold
    public static let webappTitleMFontWeight = 600
    public static let webappTitleMLetterSpacing = 0
    public static let webappTitleMLineHeight = 20
    public static let webappTitleMParagraphIndent = 0
    public static let webappTitleMParagraphSpacing = 12
    public static let webappTitleMTextCase = none
    public static let webappTitleMTextDecoration = none
    public static let webappTitleXlFontFamily = Inter
    public static let webappTitleXlFontSize = 21
    public static let webappTitleXlFontStretch = normal
    public static let webappTitleXlFontStyle = normal
    public static let webappTitleXlFontStyleOld = Regular
    public static let webappTitleXlFontWeight = 400
    public static let webappTitleXlLetterSpacing = 0
    public static let webappTitleXlLineHeight = 28
    public static let webappTitleXlParagraphIndent = 0
    public static let webappTitleXlParagraphSpacing = 12
    public static let webappTitleXlTextCase = none
    public static let webappTitleXlTextDecoration = none
    public static let webappTitleXxlFontFamily = Inter
    public static let webappTitleXxlFontSize = 25
    public static let webappTitleXxlFontStretch = normal
    public static let webappTitleXxlFontStyle = normal
    public static let webappTitleXxlFontStyleOld = Regular
    public static let webappTitleXxlFontWeight = 400
    public static let webappTitleXxlLetterSpacing = 0
    public static let webappTitleXxlLineHeight = 32
    public static let webappTitleXxlParagraphIndent = 0
    public static let webappTitleXxlParagraphSpacing = 12
    public static let webappTitleXxlTextCase = none
    public static let webappTitleXxlTextDecoration = none
    public static let yellow200 = rgba(255, 247, 214, 1)
    public static let yellow600 = rgba(255, 223, 92, 1)
    public static let yellow800 = rgba(255, 204, 0, 1)
    public static let yellow850 = rgba(221, 178, 7, 1)
}
